{"version":3,"file":"static/js/528.c92e237d.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gCslS\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string,\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks: React.FC<ProfileStatusPropsType> = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <>\r\n        {!editMode && <div style={{fontWeight: 'bold'}}>\r\n                <span onDoubleClick={activateEditMode}>\r\n                    {status || '--------'}\r\n                </span>\r\n        </div>}\r\n        {editMode && <div>\r\n            <input value={status}\r\n                   onBlur={deactivateEditMode}\r\n                   autoFocus\r\n                   onChange={onStatusChange}/>\r\n        </div>}\r\n    </>\r\n}","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport {ProfileType} from '../../../redux/profile-reducer';\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg'\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\n// import {ProfileStatus} from './ProfileStatus';\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: null | ProfileType,\r\n    status: string,\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={profile.photos.large ? profile.photos.large : userPhoto} alt=\"user\"/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div>Hi, my name is {profile.fullName}</div>\r\n                <div>{profile.aboutMe}</div>\r\n                <div>Contacts:\r\n                    <div>{profile.contacts.facebook}</div>\r\n                    <div>{profile.contacts.website}</div>\r\n                    <div>{profile.contacts.vk}</div>\r\n                    <div>{profile.contacts.twitter}</div>\r\n                    <div>{profile.contacts.instagram}</div>\r\n                    <div>{profile.contacts.youtube}</div>\r\n                    <div>{profile.contacts.github}</div>\r\n                    <div>{profile.contacts.mainLink}</div>\r\n                </div>\r\n                <div>Job preferences: {profile.lookingForAJobDescription}</div>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__d3D3L\",\"posts\":\"MyPosts_posts__53ep-\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__5eqmj\"};","import classes from \"./Post.module.css\";\r\nimport React from \"react\";\r\nimport {PostType} from \"../../../../redux/profile-reducer\";\r\n\r\n\r\n\r\n\r\nconst Post = (props:PostType) => {\r\n    return (\r\n        <div className={classes.item}><img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTLpH2L9SxARizd9V_dTyF1xaNW_71Tj0QjKQ&usqp=CAU\" alt=\"avatar\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import classes from './MyPosts.module.css';\r\nimport React from 'react';\r\nimport Post from './Post/Post';\r\nimport {MyPostsPropsType} from './MyPostsContainer';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} id={p.id} message={p.message}\r\n                                                   likesCount={p.likesCount}/>)\r\n\r\n    const addNewPost = (formData: FormDataType) => {\r\n        props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts\r\n\r\ntype FormDataType = {\r\n    newPostText: string\r\n}\r\n\r\nconst PostsForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name={'newPostText'} placeholder={'write a post'} component={Textarea}\r\n                   validate={[required, maxLength10]} FieldType={'textarea'}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm<FormDataType>({\r\n    form: 'profileAddPostReduxForm'\r\n})(PostsForm)","import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport {addPostCreator, PostType} from '../../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport {RootState} from '../../../redux/redux-store';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype mapStateToPropsType = {\r\n    posts: Array<PostType>\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newPost: string) => void\r\n}\r\nexport type MyPostsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nconst mapStateToProps = (state: RootState): mapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addPost: (newPost: string) => dispatch(addPostCreator(newPost)),\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from '../../redux/profile-reducer';\r\n\r\n\r\ntype ProfilePropsType = {\r\n    profile: null | ProfileType,\r\n    status: string,\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    getUserProfileThunkCreator,\r\n    getUserStatusThunkCreator,\r\n    updateUserStatusThunkCreator,\r\n} from '../../redux/profile-reducer';\r\nimport {RootState} from '../../redux/redux-store';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\n\r\nclass ProfileContainer extends React.Component<ProfileContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId ?? this.props.authorizedUserId\r\n        if (!userId) {\r\n            this.props.history.push('/login')\r\n        }\r\n        this.props.getUserProfileThunkCreator(Number(userId))\r\n        this.props.getUserStatusThunkCreator(Number(userId))\r\n    }\r\n\r\n    render() {\r\n        return <Profile profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateUserStatusThunkCreator}/>\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = ReturnType<typeof mapStateToProps>\r\ntype mapDispatchToPropsType = {\r\n    getUserProfileThunkCreator: (userId: number) => void\r\n    getUserStatusThunkCreator: (userId: number) => void\r\n    updateUserStatusThunkCreator: (status: string) => void\r\n}\r\ntype PropsFromConnectType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfileContainerPropsType = RouteComponentProps<PathParamsType> & PropsFromConnectType\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,\r\n        {\r\n            getUserProfileThunkCreator,\r\n            getUserStatusThunkCreator,\r\n            updateUserStatusThunkCreator\r\n        }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React, {ComponentType} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {RootState} from '../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: RootState): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    };\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","style","fontWeight","onDoubleClick","value","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","profile","className","classes","src","photos","large","userPhoto","alt","fullName","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJobDescription","Preloader","message","likesCount","maxLength10","maxLengthCreator","React","postsElements","posts","map","p","id","AddPostReduxForm","onSubmit","formData","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","placeholder","component","Textarea","validate","required","FieldType","connect","state","profilePage","dispatch","newPost","addPostCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfileThunkCreator","Number","getUserStatusThunkCreator","updateUserStatusThunkCreator","compose","auth","withRouter","withAuthRedirect","mapStateToProps","isAuth","Component","restProps","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","to"],"sourceRoot":""}